resource_types:
- name: terraform
  type: docker-image
  source:
    repository: pacphi/terraform-resource-with-carvel
    tag: latest
    username: ""
    password: ""

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
    tag: v0.6.0

- name: fly
  type: docker-image
  source:
    repository: troykinsella/concourse-fly-resource
    tag: latest


resources:
# The repo that contains Terraform
- name: pipeline-repo
  type: git
  source:
    uri: https://github.com/arulvannala/tk4k8s-TAS3-pipelines.git
    branch: main

- name: terraform-state
  type: terraform
  source:
    env_name: ((environment_name))
    backend_type: gcs
    backend_config:
      bucket: tas-state
      prefix: ((environment_name))/terraform/gcp/certmanager
      credentials: ((gcp_account_key_json))

- name: fly
  type: fly
  source:
    url: {{concourse_url}}
    username: ((concourse_username))
    password: ((concourse_password))
    team: main
    insecure: true

- name: gcloud-credentials
  type: gcs-resource
  source:
    bucket: tas-creds
    json_key: ((gcp_account_key_json))
    versioned_file: ((environment_name))/gcp-credentials.json

- name: kubeconfig
  type: gcs-resource
  source:
    bucket: tas-creds
    json_key: ((gcp_account_key_json))
    versioned_file: ((environment_name))/.kube/config

- name: terraform-vars
  type: gcs-resource
  source:
    bucket: tas-config
    json_key: ((gcp_account_key_json))
    versioned_file: ((environment_name))/terraform/gcp/certmanager/terraform.tfvars

jobs:
- name: cluster-smoke-test
  plan:
  - get: kubeconfig
    trigger: true
  - get : fly
    trigger: true 
  - task: kubeconfig-task
    config:
      inputs:
        - name: kubeconfig
      platform: linux
      image_resource:
        type: registry-image
        source: { repository: bitnami/kubectl   }
      run:
        path: sh
        args:
        - -exc
        - |
          sleep 10
          kubectl get no --kubeconfig=kubeconfig/config
  on_failure:
    do:
      - put: fly
        params:
          options: trigger-job -j  create-gke-cluster/cluster-smoke-test


- name: terraform-plan
  plan:
  - get: pipeline-repo
    trigger: true
  - get: gcloud-credentials
    trigger: false
  - get: kubeconfig
    trigger: true
    passed: [cluster-smoke-test]
  - get: terraform-vars
    trigger: false
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/gcp/certmanager
      plan_only: true
      var_files: [terraform-vars/terraform.tfvars]

- name: terraform-apply
  plan:
  - get: pipeline-repo
    trigger: true
    passed: [terraform-plan]
  - get: gcloud-credentials
    trigger: true
    passed: [terraform-plan]
  - get: kubeconfig
    trigger: true
    passed: [terraform-plan]
  - get: terraform-state
    trigger: true
    passed: [terraform-plan]
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/gcp/certmanager
      plan_run: true
  on_failure:
    do:
      - put: fly
        params:
          options: trigger-job -j  install-crt-mgr/terraform-plan

- name: terraform-destroy
  plan:
  - get: pipeline-repo
    trigger: false
  - get: gcloud-credentials
    trigger: false
  - get: kubeconfig
    trigger: false
  - get: terraform-vars
    trigger: false
  - get: terraform-state
    trigger: false
  - put: terraform-state
    params:
      terraform_source: pipeline-repo/terraform/gcp/certmanager
      action: destroy
      var_files: [terraform-vars/terraform.tfvars]
    get_params:
      action: destroy


- name: trigger-nignix-cluster-install
  plan:
  - get: terraform-state
    trigger: true
    passed: [terraform-apply]
  - put: fly
    params:
      options: unpause-pipeline -p install-nginx
  - put: fly
    params:
      options: pause-pipeline -p create-gke-cluster
  - put: fly
    params:
      options: trigger-job -j install-nginx/terraform-plan
